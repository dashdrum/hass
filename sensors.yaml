


- platform: template
  sensors:
    sun_elevation:
      friendly_name: "Sun Angle"
      value_template: "{{states.sun.sun.attributes.elevation}}"
      unit_of_measurement: '°'

- platform: template
  sensors:
    sun_state:
      friendly_name: "Sun State"
      value_template: >-
        {% if is_state('sun.sun', 'above_horizon') %}
          up
        {% else %}
          down
        {% endif %}

# Sensor to monitor system resources for the Hass Server
- platform: rest
  name: Hass Server
  resource: http://192.168.254.118:9999/
  timeout: 30
  json_attributes:
    - cpu_current
    - cpu_free
    - cpu_average
    - cpu_temperature
    - drive
    - memory
    - network
  value_template: ''
  headers:
    Content-Type: application/json
    User-Agent: Home Assistant Agent

- platform: template
  sensors:
    hass_server_cputemp:
      value_template: '{{ states.sensor.hass_server.attributes["cpu_temperature"] }}'
      unit_of_measurement: '°C'
      device_class: temperature
    hass_server_cpuused:
      value_template: '{{ states.sensor.hass_server.attributes["cpu_current"] }}'
      unit_of_measurement: '%'
    hass_server_freegb:
      value_template: '{{ states.sensor.hass_server.attributes["drive"]["freeGb"] }}'
      unit_of_measurement: 'GB'
    hass_server_driveused:
      value_template: '{{ states.sensor.hass_server.attributes["drive"]["usedPercentage"] }}'
      unit_of_measurement: '%'
    hass_server_freemem:
      value_template: '{{ states.sensor.hass_server.attributes["memory"]["freeMemPercentage"] }}'
      unit_of_measurement: '%'
    hass_server_usedmem:
      value_template: '{{ ( states.sensor.hass_server.attributes["memory"]["usedMemMb"] / states.sensor.hass_server.attributes["memory"]["totalMemMb"]  * 100 ) | round(2) }}'
      unit_of_measurement: '%'
    hass_server_networkin:
      value_template: '{{ states.sensor.hass_server.attributes["network"]["enp2s0"]["inputBytes"] | multiply(0.000000001024) | round(2) }}'
      unit_of_measurement: 'GB'
    hass_server_networkout:
      # Multiply pipe will convert bytes to gb.
      value_template: '{{ states.sensor.hass_server.attributes["network"]["enp2s0"]["outputBytes"] | multiply(0.000000001024) | round(2) }}'
      unit_of_measurement: 'GB'

- platform: template
  sensors:
    hass_server_cputemp_c:
      unit_of_measurement: '°C'
      device_class: temperature
      value_template: "{{ ((( states('sensor.hass_server_cputemp') | float ) - 32) * 5/9) | round(1) }}"

- platform: template
  sensors:
    ktvc_sea_level_pressure_mbar:
      unit_of_measurement: 'mbar'
      device_class: pressure
      value_template: >-
        {{ (states('sensor.ktvc_sea_level_pressure')|float(0) * 33.8639) | round(1) }}

- platform: template
  sensors:
    outdoor_pressure_mbar:
      unit_of_measurement: 'mbar'
      device_class: pressure
      value_template: >-
        {{ (states('sensor.outdoor_ruuvitag_9aa3_pressure')|float(0) * 68.9476) | round(1) }}

- platform: template
  sensors:
    outdoor_sea_level_pressure:
      unit_of_measurement: 'mbar'
      device_class: pressure
      value_template: >-
        {{ ((states('sensor.outdoor_pressure_mbar')|float(0) / (1-0.0065*204/(states('sensor.outdoor_ruuvitag_9aa3_temperature')|float(0) + 273.15 )) ** (5.255)) + 5 ) | round(1) }}

- platform: template
  sensors:
    outdoor_temperature_c:
      friendly_name: "Outdoor Temperature C"
      unit_of_measurement: '°C'
      device_class: temperature
      value_template: "{{ ((( states('sensor.outdoor_ruuvitag_9aa3_temperature') | float(0) ) - 32) * 5/9) | round(1) }}"

- platform: template
  sensors:
    outdoor_dew_point_s:
      friendly_name: "Outdoor Dew Point"
      unit_of_measurement: '°F'
      value_template: >-
        {{ (((243.04*(log(float(states('sensor.outdoor_ruuvitag_9aa3_humidity'))/100)+((17.625*float(states('sensor.outdoor_temperature_c')))/(243.04+float(states('sensor.outdoor_temperature_c')))))
          /(17.625-log(float(states('sensor.outdoor_ruuvitag_9aa3_humidity'))/100)-((17.625*float(states('sensor.outdoor_temperature_c')))/(243.04+float(states('sensor.outdoor_temperature_c'))))))
          *  9/5) + 32) | round(2) }}
          
- platform: min_max
  entity_ids:
    - sensor.temp_compare_bme280_temperature
    - sensor.temp_compare_sht30d_temperature
  type: mean
  name: avg_tech_cabinet_temp
  unique_id: avg_tech_cabinet_temp
  round_digits: 2

- platform: min_max
  entity_ids:
    - sensor.family_h5100_4b4c_humidity
    - sensor.living_room_humidity
    - sensor.master_bedroom_humidity
    - sensor.plant_stand_humidity
    - sensor.spare_room_humidity
    - sensor.kitchen_sensor_humidity
    - sensor.guest_sensor_humidity
    - sensor.main_floor_nest_humidity
    - sensor.mechanical_room_humidity
    - sensor.office_h5100_3a27_humidity
  type: mean
  name: avg_indoor_humidity
  unique_id: avg_indoor_humidity
  round_digits: 2

- platform: min_max
  entity_ids:
    - sensor.master_bedroom_humidity
    - sensor.spare_room_humidity
  type: mean
  name: avg_upstairs_humidity
  unique_id: avg_upstairs_humidity
  round_digits: 2

- platform: min_max
  entity_ids:
    - sensor.guest_sensor_humidity
    - sensor.mechanical_room_humidity
    - sensor.family_h5100_4b4c_humidity
  type: mean
  name: avg_basement_humidity
  unique_id: avg_basement_humidity
  round_digits: 2

- platform: min_max
  entity_ids:
    - sensor.living_room_temperature
    - sensor.master_bedroom_temperature
    - sensor.laundry_temperature
    - sensor.plant_stand_temperature
    - sensor.spare_room_temperature
    - sensor.kitchen_sensor_temperature
    - sensor.main_floor_nest_temperature
    - sensor.office_h5100_3a27_temperature
  type: mean
  name: avg_indoor_temperature
  unique_id: avg_indoor_temperature
  round_digits: 2

- platform: min_max
  entity_ids:
    - sensor.master_bedroom_temperature
    - sensor.upstairs_bath_temperature
    - sensor.spare_room_temperature
  type: mean
  name: avg_upstairs_temperature
  unique_id: avg_upstairs_temperature
  round_digits: 2

- platform: min_max
  entity_ids:
    - sensor.geust_sensor_temperature
    - sensor.family_h5100_4b4c_temperature
    - sensor.mechanical_room_temperature
  type: mean
  name: avg_basement_temperature
  unique_id: avg_basement_temperature
  round_digits: 2

# - platform: template
#   sensors:
#     shellyswitch25_00fb7b5_temperature_c:
#       friendly_name: "Ceiling Lights Switch Temp C"
#       unit_of_measurement: '°C'
#       device_class: temperature
#       value_template: "{{ ((( states('sensor.shellyswitch25_00fb7b5_temperature') | float ) - 32) * 5/9) | round(1) }}"
