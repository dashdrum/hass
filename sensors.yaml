# - platform: yr
- platform: darksky
  api_key: !secret darksky_api_key
  monitored_conditions:
    # - summary
    # - icon
    # - nearest_storm_distance
    # - nearest_storm_bearing
    # - precip_type
    # - precip_intensity
    # - precip_probability
    - temperature
    # - apparent_temperature
    - dew_point
    # - wind_speed
    # - wind_bearing
    # - cloud_cover
    - humidity
    - pressure
    # - visibility
    # - ozone
    # - minutely_summary
    # - hourly_summary
    # - daily_summary
    # - temperature_max
    # - temperature_min
    # - apparent_temperature_max
    # - apparent_temperature_min
    # - precip_intensity_max

- platform: fastdotcom

## HS110 Washer switch sensors
- platform: template
  sensors:
    washer_amps:
      friendly_name: "Washer Current"
      value_template: '{{ states.switch.washer.attributes["current_a"] | float }}'
      unit_of_measurement: 'A'
    washer_watts:
      friendly_name_template: "Washer Current Consumption"
      value_template: '{{ states.switch.washer.attributes["current_power_w"] | float }}'
      unit_of_measurement: 'W'
    washer_total_kwh:
      friendly_name_template: "Washer Total Consumption"
      value_template: '{{ states.switch.washer.attributes["total_energy_kwh"] | float }}'
      unit_of_measurement: 'kWh'
    washer_volts:
      friendly_name_template: "Washer Voltage"
      value_template: '{{ states.switch.washer.attributes["voltage"] | float }}'
      unit_of_measurement: 'V'
    washer_today_kwh:
      friendly_name_template: "Washer Today's Consumption"
      value_template: '{{ states.switch.washer.attributes["today_energy_kwh"] | float }}'
      unit_of_measurement: 'kWh'

- platform: template
  sensors:
    washer_state:
      value_template: >-
        {% if states.input_boolean.washer_status.state == 'on' %}
          Washing
        {% else %}
          Idle
        {% endif %}


- platform: template
  sensors:
    sun_elevation:
      friendly_name: "Sun Angle"
      value_template: "{{states.sun.sun.attributes.elevation}}"
      unit_of_measurement: '°'

- platform: template
  sensors:
    sun_state:
      friendly_name: "Sun State"
      value_template: >-
        {% if is_state('sun.sun', 'above_horizon') %}
          up
        {% else %}
          down
        {% endif %}

- platform: template
  sensors:
    garage_left_bay:
      friendly_name: "Garage Left Bay"
      value_template: >-
        {% if is_state('binary_sensor.garage_left_bay', 'on') %}
          Occupied
        {% else %}
          Empty
        {% endif %}

- platform: template
  sensors:
    master_bed_left_state:
      friendly_name: "Master Bed Left Side"
      value_template: >-
        {% if is_state('binary_sensor.master_bed_sensor_left_side', 'on')   %}
          Occupied
        {% else %}
          Not Occupied
        {% endif %}
      icon_template: >-
        {% if is_state('binary_sensor.master_bed_sensor_left_side', 'on') %}
          mdi:bed
        {% else %}
          mdi:bed-empty
        {% endif %}

- platform: template
  sensors:
    master_bed_right_state:
      friendly_name: "Master Bed Right Side"
      value_template: >-
        {% if is_state('binary_sensor.master_bed_sensor_right_side', 'on')   %}
          Occupied
        {% else %}
          Not Occupied
        {% endif %}
      icon_template: >-
        {% if is_state('binary_sensor.master_bed_sensor_right_side', 'on') %}
          mdi:bed
        {% else %}
          mdi:bed-empty
        {% endif %}

- platform: template
  sensors:
    master_bed_state:
      friendly_name: "Master Bed Entire Bed"
      value_template: >-
        {% if is_state('binary_sensor.master_bed_sensor_entire_bed', 'on')   %}
          Occupied
        {% else %}
          Not Occupied
        {% endif %}
      icon_template: >-
        {% if is_state('binary_sensor.master_bed_sensor_entire_bed', 'on') %}
          mdi:bed
        {% else %}
          mdi:bed-empty
        {% endif %}

# Sensor to monitor system resources for the Hass Server
- platform: rest
  name: Hass Server
  resource: http://192.168.254.118:9999/
  timeout: 30
  json_attributes:
    - cpu_current
    - cpu_free
    - cpu_average
    - cpu_temperature
    - drive
    - memory
    - network
  value_template: ''
  headers:
    Content-Type: application/json
    User-Agent: Home Assistant Agent

- platform: template
  sensors:
    hass_server_cputemp:
      value_template: '{{ states.sensor.hass_server.attributes["cpu_temperature"] }}'
      unit_of_measurement: '°'
    hass_server_cpuused:
      value_template: '{{ states.sensor.hass_server.attributes["cpu_current"] }}'
      unit_of_measurement: '%'
    hass_server_freegb:
      value_template: '{{ states.sensor.hass_server.attributes["drive"]["freeGb"] }}'
      unit_of_measurement: 'GB'
    hass_server_driveused:
      value_template: '{{ states.sensor.hass_server.attributes["drive"]["usedPercentage"] }}'
      unit_of_measurement: '%'
    hass_server_freemem:
      value_template: '{{ states.sensor.hass_server.attributes["memory"]["freeMemPercentage"] }}'
      unit_of_measurement: '%'
    hass_server_usedmem:
      value_template: '{{ ( states.sensor.hass_server.attributes["memory"]["usedMemMb"] / states.sensor.hass_server.attributes["memory"]["totalMemMb"]  * 100 ) | round(2) }}'
      unit_of_measurement: '%'
    hass_server_networkin:
      value_template: '{{ states.sensor.hass_server.attributes["network"]["enp2s0"]["inputBytes"] | multiply(0.000000001024) | round(2) }}'
      unit_of_measurement: 'GB'
    hass_server_networkout:
      # Multiply pipe will convert bytes to gb.
      value_template: '{{ states.sensor.hass_server.attributes["network"]["enp2s0"]["outputBytes"] | multiply(0.000000001024) | round(2) }}'
      unit_of_measurement: 'GB'

- platform: template
  sensors:
    outdoor_sea_level_pressure:
      unit_of_measurement: 'mBar'
      value_template: >-
        {{ (float(states.sensor.outdoor_pressure.state) / (1-0.0065*204/(float(states.sensor.outdoor_temperature.state) + 273.15 )) ** (5.255)) | round(1) }}


- platform: template
  sensors:
    outdoor_temperature_c:
      friendly_name: "Outdoor Temperature C"
      unit_of_measurement: 'ºC'
      value_template: "{{ ((( states('sensor.outdoor_temperature') | float ) - 32) * 5/9) | round(1) }}"

- platform: template
  sensors:
    outdoor_dew_point_s:
      friendly_name: "Outdoor Dew Point"
      unit_of_measurement: '°F'
      value_template: >-
        {{ (((243.04*(log(float(states.sensor.outdoor_humidity.state)/100)+((17.625*float(states.sensor.outdoor_temperature_c.state))/(243.04+float(states.sensor.outdoor_temperature_c.state))))
          /(17.625-log(float(states.sensor.outdoor_humidity.state)/100)-((17.625*float(states.sensor.outdoor_temperature_c.state))/(243.04+float(states.sensor.outdoor_temperature_c.state)))))
          *  9/5) + 32) | round(2) }}

- platform: template
  sensors:
    avg_tech_cabinet_temp:
      unit_of_measurement: "°F"
      value_template: >-
        {{ ((float(states('sensor.temp_compare_bme280_temperature')) + float(states('sensor.temp_compare_sht30d_temperature'))) / 2) | round(2) }}

- platform: template
  sensors:
    avg_garage_temp:
      unit_of_measurement: "°F"
      value_template: >-
        {{ ((float(states('sensor.garage_sensor_temperature'))
           + float(states('sensor.garage_temp'))
           + float(states('sensor.garage_temperature_3'))) / 3) | round(2) }}

- platform: template
  sensors:
    avg_garage_humidity:
      unit_of_measurement: "%"
      value_template: >-
        {{ ((float(states('sensor.garage_humidity'))
           + float(states('sensor.garage_humidity_3'))
           + float(states('sensor.garage_sensor_humidity'))) / 3) | round(2) }}

- platform: template
  sensors:
    avg_indoor_humidity:
      unit_of_measurement: "%"
      value_template: >-
        {{ ((float(states('sensor.family_room_humidity'))
           + float(states('sensor.living_room_humidity'))
           + float(states('sensor.master_bedroom_humidity'))
           + float(states('sensor.office_humidity'))
           + float(states('sensor.plant_stand_humidity'))
           + float(states('sensor.spare_room_humidity'))) / 6) | round(2) }}



# ## Workshop Temperature/Humdity Sensor

# - platform: mqtt
#   state_topic: 'ws/sensor1'
#   name: ws_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
#   value_template: '{{ value_json.temperature }}'
# - platform: mqtt
#   state_topic: 'ws/sensor1'
#   name: ws_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
#   value_template: '{{ value_json.humidity }}'
# - platform: mqtt
#   state_topic: 'ws/sensor1'
#   name: ws_batt
#   unit_of_measurement: "%"
#   value_template: '{{ value_json.batt }}'


## Laundry Sensors

# - platform: mqtt
#   state_topic: laundry/sensor1
#   name: laundry_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
#   value_template: '{{ value_json.humidity }}'
# - platform: mqtt
#   state_topic: 'laundry/sensor1'
#   name: laundry_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
#   value_template: '{{ value_json.temperature }}'
# - platform: mqtt
#   state_topic: 'laundry/dryer'
#   name: dryer_status
#   value_template: '{{ value_json.dryer }}'
# - platform: mqtt
#   state_topic: 'laundry/water'
#   name: water_status
#   value_template: '{{ value_json.water }}'
# - platform: template
#   sensors:
#     desk_state:
#       friendly_name: "Desk State"
#       value_template: >-
#         {% if is_state('binary_sensor.desk_raised', 'on') %}
#           Up
#         {% else %}
#           Down
#         {% endif %}
# - platform: systemmonitor
#   resources:
#     - type: disk_use_percent
#       arg: /
#     - type: memory_use_percent
#     - type: ipv4_address
#       arg: eth0
#     - type: last_boot
#     - type: processor_use

# - platform: google_travel_time
#   name: Dan to Home
#   api_key: !secret gmap_api_key
#   origin: device_tracker.google_maps_102501070565386974294
#   destination: zone.home

# - platform: google_travel_time
#   name: Dan to Work
#   api_key: !secret gmap_api_key
#   origin: device_tracker.google_maps_102501070565386974294
#   destination: zone.work

# - platform: google_travel_time
#   name: Work to Home
#   api_key: !secret gmap_api_key
#   origin: zone.work
#   destination: zone.home
#   # options:
#   #   departure_time: 17:10:00

# - platform: google_travel_time
#   name: Home to Work
#   api_key: !secret gmap_api_key
#   origin: zone.home
#   destination: zone.work
#   # options:
#   #   departure_time: 07:45:00


## Temperature Compare

# - platform: mqtt
#   state_topic: 'temp_compare/bme280/temperature/state'
#   name: temp_compare_bme280_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'temp_compare/bme280/humidity/state'
#   name: temp_compare_bme280_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'temp_compare/bme280/pressure/state'
#   name: temp_compare_bme280_press
#   unit_of_measurement: 'mbar'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'temp_compare/sht3xd/temperature/state'
#   name: temp_compare_sht3xd_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'temp_compare/sht3xd/humidity/state'
#   name: temp_compare_sht3xd_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'temp_compare/am2320/temperature/state'
#   name: temp_compare_am2320_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'temp_compare/am2320/humidity/state'
#   name: temp_compare_am2320_humid
#   unit_of_measurement: '%'
#   expire_after: 1800

## NodeMCU Test Temp

# - platform: mqtt
#   state_topic: 'nodemcu_temp_test/sht3xd/temperature/state'
#   name: nodemcu_test_sht3xd_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'nodemcu_temp_test/sht3xd/humidity/state'
#   name: nodemcu_test_sht3xd_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'nodemcu_temp_test/am2320/temperature/state'
#   name: nodemcu_test_am2320_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'nodemcu_temp_test/am2320/humidity/state'
#   name: nodemcu_test_am2320_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: nodemcu_temp_test/sensor/ambient_light_sensor/state
#   name: ambient_light_sensor
#   expire_after: 1800

## Garage Sensor

# - platform: mqtt
#   state_topic: 'garage_sensor/temperature/state'
#   name: garage_temperature_2
#   unit_of_measurement: '°C'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'garage_sensor/humidity/state'
#   name: garage_humidity_2
#   unit_of_measurement: '%'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'garage_sensor/pressure/state'
#   name: garage_pressure_2
#   unit_of_measurement: 'mbar'
#   expire_after: 1800

## LED Mirror - Upstairs Bathroom

# - platform: mqtt
#   state_topic: 'led_mirror/sensor/upstairs_bath_temperature/state'
#   name: upstairs_bath_temperature
#   unit_of_measurement: '°C'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'led_mirror/sensor/upstairs_bath_humidity/state'
#   name: upstairs_bath_humidity
#   unit_of_measurement: '%'
#   expire_after: 1800

## Living Room Temperature/Humdity Sensor

# - platform: mqtt
#   state_topic: 'lr/temperature/state'
#   name: living_room_temperature
#   unit_of_measurement: '°C'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'lr/humidity/state'
#   name: living_room_humidity
#   unit_of_measurement: '%'
#   expire_after: 1800

# - platform: mqtt
#   state_topic: 'lr/sensor1'
#   name: lr_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
#   value_template: '{{ value_json.temperature }}'
# - platform: mqtt
#   state_topic: 'lr/sensor1'
#   name: lr_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
#   value_template: '{{ value_json.humidity }}'
# - platform: mqtt
#   state_topic: 'lr/sensor1'
#   name: lr_batt
#   unit_of_measurement: "%"
#   value_template: '{{ value_json.batt }}'



## Master Temperature/Humdity Sensor

# - platform: mqtt
#   state_topic: 'mb/sensor1'
#   name: mb_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
#   value_template: '{{ value_json.temperature }}'
# - platform: mqtt
#   state_topic: 'mb/sensor1'
#   name: mb_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
#   value_template: '{{ value_json.humidity }}'
# - platform: mqtt
#   state_topic: 'mb/sensor1'
#   name: mb_batt
#   unit_of_measurement: "%"
#   value_template: '{{ value_json.batt }}'

## Bedroom 2 Temperature/Humdity Sensor

# - platform: mqtt
#   state_topic: 'b2/sensor1'
#   name: b2_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
#   value_template: '{{ value_json.temperature }}'
# - platform: mqtt
#   state_topic: 'b2/sensor1'
#   name: b2_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
#   value_template: '{{ value_json.humidity }}'
# - platform: mqtt
#   state_topic: 'b2/sensor1'
#   name: b2_batt
#   unit_of_measurement: "%"
#   value_template: '{{ value_json.batt }}'

## Family Room Temperature/Humdity Sensor

# - platform: mqtt
#   state_topic: 'fr/temperature/state'
#   name: family_room_temperature
#   unit_of_measurement: '°C'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'fr/humidity/state'
#   name: family_room_humidity
#   unit_of_measurement: '%'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'fr/battery/state'
#   name: family_room_bettery
#   unit_of_measurement: '%'

# - platform: mqtt
#   state_topic: 'bs/sensor1'
#   name: bs_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
#   value_template: '{{ value_json.temperature }}'
# - platform: mqtt
#   state_topic: 'bs/sensor1'
#   name: bs_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
#   value_template: '{{ value_json.humidity }}'
# - platform: mqtt
#   state_topic: 'bs/sensor1'
#   name: bs_batt
#   unit_of_measurement: "%"
#   value_template: '{{ value_json.batt }}'

## Office Sensor

# - platform: mqtt
#   state_topic: 'office/temperature/state'
#   name: office_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'office/humidity/state'
#   name: office_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
# - platform: mqtt
#   state_topic: 'office/battery/state'
#   name: office_batt
#   unit_of_measurement: '%'
# - platform: mqtt
#   state_topic: 'office/pressure/state'
#   name: office_press
#   unit_of_measurement: 'mbar'
#   expire_after: 1800

## Upstairs Bathroom Temperature/Humdity Sensor

# - platform: mqtt
#   state_topic: 'ub/sensor1'
#   name: ub_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
#   value_template: '{{ value_json.temperature }}'
# - platform: mqtt
#   state_topic: 'ub/sensor1'
#   name: ub_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
#   value_template: '{{ value_json.humidity }}'

## Garage Door Temperature/Pressure Sensor

# - platform: mqtt
#   state_topic: 'garage/sensor1'
#   name: ga_temp
#   unit_of_measurement: '°C'
#   expire_after: 1800
#   value_template: '{{ value_json.temperature }}'
# # - platform: mqtt
# #   state_topic: 'garage/sensor1'
# #   name: ga_pressure
# #   unit_of_measurement: 'mbar'
# #   expire_after: 1800
# #   value_template: '{{ value_json.pressure }}'
# - platform: mqtt
#   state_topic: 'garage/sensor1'
#   name: ga_humid
#   unit_of_measurement: '%'
#   expire_after: 1800
#   value_template: '{{ value_json.humidity }}'

