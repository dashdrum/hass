homeassistant:
  customize:
    automation.wall_clock_input_number_brightness_change:
      friendly_name: Wall Clock Input Number Brightness Change
    automation.wall_clock_brightness_set:
      friendly_name: Wall Clock Brightness Set
    automation.wall_clock_brightness:
      friendly_name: Wall Clock Brightness
    sensor.wall_clock_marker_setting:
      icon: mdi:marker
    sensor.wall_clock_effect:
      icon: mdi:target
      friendly_name: Wall Clock Effect

## With discovery off, the entities are defined here

button:
  - platform: mqtt
    device_class: restart
    name: Wall Clock Restart
    entity_category: config
    command_topic: wall_clock/button/wall_clock_restart/command
    availability_topic: wall_clock/availability
    unique_id: ESPbuttonwall_clock_restart
    device:
      identifiers: 2cf4324a9e03
      name: wall_clock
      sw_version: esphome v2022.3.2 Apr 30 2022, 02:20:45
      model: d1_mini
      manufacturer: espressif

  - platform: mqtt
    name: Wall Clock Random Effect
    command_topic: wall_clock/button/wall_clock_random_effect/command
    availability_topic: wall_clock/availability
    unique_id: ESPbuttonwall_clock_random_effect
    device:
      identifiers: 2cf4324a9e03
      name: wall_clock
      sw_version: esphome v2022.3.2 Apr 30 2022, 02:20:45
      model: d1_mini
      manufacturer: espressif

light:
  - platform: mqtt
    schema: json
    color_mode: true
    supported_color_modes:
      - rgb
    brightness: true
    effect: true
    effect_list:
      - Clock
      - Clock Backfill
      - Clock Backwards
      - Clock Basic
      - Clock Candy Cane
      - Clock Comet
      - Clock Flicker
      - Clock Fly
      - Clock Glitter
      - Clock Half
      - Clock Inverse
      - Clock Marquee
      - Clock Tourbillon
      - Color Test
      - Color Wipe
      - Police 3
      - Rainbow Spinner
      - None
    name: Wall Clock
    state_topic: wall_clock/light/wall_clock/state
    command_topic: wall_clock/light/wall_clock/command
    availability_topic: wall_clock/availability
    unique_id: ESPlightwall_clock
    device:
      identifiers: 2cf4324a9e03
      name: wall_clock
      sw_version: esphome v2022.3.2 Apr 30 2022, 02:20:45
      model: d1_mini
      manufacturer: espressif

sensor:
  - platform: mqtt
    device_class: signal_strength
    unit_of_measurement: dBm
    state_class: measurement
    name: Wall Clock WiFi Signal
    icon: mdi:wifi
    entity_category: diagnostic
    state_topic: wall_clock/sensor/wall_clock_wifi_signal/state
    availability_topic: wall_clock/availability
    unique_id: 2cf4324a9e03-wifisignal
    device:
      identifiers: 2cf4324a9e03
      name: wall_clock
      sw_version: esphome v2022.3.2 Apr 30 2022, 02:20:45
      model: d1_mini
      manufacturer: espressif

  - platform: mqtt
    name: Wall Clock Marker Setting
    state_topic: wall_clock/markers/state
    availability_topic: wall_clock/availability
    unique_id: ESPsensorwall_clock_marker_setting
    device:
      identifiers: 2cf4324a9e03
      name: wall_clock
      sw_version: esphome v2022.3.2 Apr 30 2022, 02:20:45
      model: d1_mini
      manufacturer: espressif

## End of entity definition

input_number:
  wall_clock_brightness:
    name: Wall Clock Brightness
    min: 1
    max: 255
    step: 1

template:
  - sensor:
    - name: wall_clock_effect
      state: "{{ 'Off' if state_attr('light.wall_clock', 'effect') == none  else state_attr('light.wall_clock', 'effect')}}"

automation:

  # Change to input_number triggers change to clock (if on)
  - alias: 'wall clock input number brightness change'
    trigger:
      - platform: state
        entity_id: input_number.wall_clock_brightness
    condition:
      - condition: state
        entity_id: light.wall_clock
        state: 'on'
    action:
      - service: light.turn_on
        entity_id: light.wall_clock
        data:
          transition: 3
          brightness: "{{ trigger.to_state.state | int(255) }}"

  # Change to clock trggers change to input_number
  # - alias: 'wall clock brightness change'
  #   trigger:
  #     - platform: numeric_state
  #       entity_id: light.wall_clock
  #       attribute: brightness
  #   condition:
  #     condition: template
  #     value_template: >
  #       {{ state_attr('light.wall_clock','brightness') != states('input_number.wall_clock_brightness', 255) | int }}
  #   action:
  #     - service: input_number.set_value
  #       entity_id: input_number.wall_clock_brightness
  #       data:
  #         value: "{{ state_attr('light.wall_clock','brightness') | float }}"

  # At turn on, clock is set to input_number
  - alias: 'wall clock brightness set'
    trigger:
      - platform: state
        entity_id: light.wall_clock
        from: 'off'
        to: 'on'
    action:
      - service: light.turn_on
        entity_id: light.wall_clock
        data:
          transition: 3
          brightness: "{{ states('input_number.wall_clock_brightness') | int(255) }}"

    # Clock brightness

    # The new brightness level is updated to the input_number, and that entity's state change triggers the clock update

  - alias: 'wall clock brightness'
    trigger:
      - platform: time_pattern
        minutes: '/2'
        seconds: 00
    action:
      - service: input_number.set_value
        entity_id: input_number.wall_clock_brightness
        data:
          value: >
            {% if state_attr('sun.sun', 'elevation') | int(-10) < -9 or state_attr('sun.sun', 'elevation') | int(8) > 7 %}
              {{ states('input_number.wall_clock_brightness') | int(115) }}
            {% elif state_attr('sun.sun', 'elevation') | int(0) < -8 %}
              114
            {% elif state_attr('sun.sun', 'elevation') | int(0) > 5 %}
              255
            {% else %}
              {{ ((states.sun.sun.attributes.elevation + 8) * 4.23 + 45) * 2.55 | int(115)  }}
            {% endif %}
          # Based on the sun's elevation, the brightness is set between 45% and 100%. Otherwise, it is left as-is.

  # - alias: 'Wall clock low light effect'
  #   trigger:
  #     - platform: numeric_state
  #       entity_id: light.wall_clock
  #       attribute: brightness
  #       below: 115
  #       for: "00:10:00"
  #   condition:
  #     - condition: state
  #       entity_id: light.wall_clock
  #       state: 'on'
  #   action:
  #     - service: light.turn_on
  #       entity_id: light.wall_clock
  #       data:
  #         effect: 'Clock Basic'

  - alias: 'Wall clock 65 markers off'
    trigger:
      - platform: numeric_state
        entity_id: light.wall_clock
        attribute: brightness
        below: 166  # 65%
    condition:
      - condition: state
        entity_id: light.wall_clock
        state: 'on'
    action:
      - service: mqtt.publish
        data:
          topic: wall_clock/markers/command
          payload: '1'
          retain: false

  - alias: 'Wall clock 45 markers off'
    trigger:
      - platform: numeric_state
        entity_id: light.wall_clock
        attribute: brightness
        below: 115 # 45%
    condition:
      - condition: state
        entity_id: light.wall_clock
        state: 'on'
    action:
      - service: mqtt.publish
        data:
          topic: wall_clock/markers/command
          payload: '0'
          retain: false

  - alias: 'Wall clock 65 markers on'
    trigger:
      - platform: numeric_state
        entity_id: light.wall_clock
        attribute: brightness
        above: 167  # 65%
    condition:
      - condition: state
        entity_id: light.wall_clock
        state: 'on'
    action:
      - service: mqtt.publish
        data:
          topic: wall_clock/markers/command
          payload: '2'
          retain: false

  - alias: 'Wall clock 45 markers on'
    trigger:
      - platform: numeric_state
        entity_id: light.wall_clock
        attribute: brightness
        above: 116 # 45%
    condition:
      - condition: state
        entity_id: light.wall_clock
        state: 'on'
    action:
      - service: mqtt.publish
        data:
          topic: wall_clock/markers/command
          payload: '1'
          retain: false


  - alias: 'Clock Circle Brightness'
    trigger:
      - platform: time_pattern
        minutes: '/2'
        seconds: 00
    condition:
      - condition: state
        entity_id: light.clock_circle
        state: 'on'
    action:
      - service: light.turn_on
        entity_id: light.clock_circle
        data:
          transition: 3
          brightness: '{{ (([states.sensor.light_meter_display_light_sensor, 300] | min)  * 0.47) + 114 | int  }}'
          # Based on the light meter value, the brightness is set between 45% and 100%
