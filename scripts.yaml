water_warning:
  alias: High Water Warning
  sequence:
  - service: switch.turn_off
    entity_id: switch.washer
  - service: switch.toggle
    entity_id: switch.laundry_light
  - service: tts.google_translate_say
    entity_id:
        - media_player.dan_speaker
        - media_player.spare_room_speaker
        - media_player.guest_room_speaker
        - media_player.kitchen_speaker
        - media_player.office_home
        - media_player.kelly_home
        - media_player.smart_clock
    data:
      message: 'Warning! The lawndry sink water level is high! The washer has been turned off.'
  - service: switch.toggle
    entity_id: switch.laundry_light
  - service: light.turn_on
    data:
      entity_id: group.living_room
      flash: long
  - service: switch.toggle
    entity_id: switch.laundry_light
  - service: light.turn_on
    data:
      entity_id: group.living_room
      flash: long
  - service: switch.toggle
    entity_id: switch.laundry_light
  - service: light.turn_on
    data:
      entity_id: group.living_room
      flash: long
  - service: switch.toggle
    entity_id: switch.laundry_light
  - service: light.turn_on
    data:
      entity_id: group.living_room
      flash: long
  - service: switch.toggle
    entity_id: switch.laundry_light
  - service: light.turn_on
    data:
      entity_id: group.living_room
      flash: long
  - service: switch.toggle
    entity_id: switch.laundry_light
  - service: light.turn_on
    data:
      entity_id: group.living_room
      flash: long
  - service: switch.toggle
    entity_id: switch.laundry_light
  - service: light.turn_on
    data:
      entity_id: group.living_room
      flash: long
  - service: switch.toggle
    entity_id: switch.laundry_light
  - service: light.turn_on
    data:
      entity_id: group.living_room
      flash: long
  - service: switch.turn_on
    entity_id: switch.laundry_light

say_somthing:
  alias: Text-to-Speech Test
  sequence:
  - service: tts.google_translate_say
    entity_id:
      - media_player.dan_speaker
      - media_player.spare_room_speaker
      - media_player.guest_room_speaker
      - media_player.kitchen_speaker
      - media_player.office_home
      - media_player.kelly_home
      - media_player.smart_clock
    data:
      message: 'Testing ... 1 ... 2 ... 3'
      # language: 'en-au'

undercabinet_morning:
  alias: Activate morning settings
  sequence:
    - service: light.turn_on
      data:
        entity_id: light.shellyrgbw2_1dfb87
        effect: 'Off'
    - service: light.turn_off
      data:
        entity_id: light.shellyrgbw2_1dfb87
    - service: scene.turn_on
      data:
        entity_id: scene.undercabinet_morning

undercabinet_evening:
  alias: Activate evening settings
  sequence:
    - service: light.turn_on
      data:
        entity_id: light.shellyrgbw2_1dfb87
        effect: 'Off'
    - service: light.turn_off
      data:
        entity_id: light.shellyrgbw2_1dfb87
    - service: scene.turn_on
      data:
        entity_id: scene.undercabinet_evening

undercabinet_warm:
  alias: Activate warm settings
  sequence:
    - service: light.turn_on
      data:
        entity_id: light.shellyrgbw2_1dfb87
        effect: 'Off'
    - service: light.turn_off
      data:
        entity_id: light.shellyrgbw2_1dfb87
    - service: scene.turn_on
      data:
        entity_id: scene.undercabinet_warm

undercabinet_cool:
  alias: Activate cool settings
  sequence:
    - service: light.turn_on
      data:
        entity_id: light.shellyrgbw2_1dfb87
        effect: 'Off'
    - service: light.turn_off
      data:
        entity_id: light.shellyrgbw2_1dfb87
    - service: scene.turn_on
      data:
        entity_id: scene.undercabinet_cool

undercabinet_button:
  alias: Undercabinet Button Press
  sequence:
    - choose:
        # IF on bright scene
        - conditions:
            - condition: template
              value_template: "{{ states.light.shellyrgbw2_1dfb87.attributes.white_value == 255 }}"
          sequence:
            - choose:
                - conditions:
                    - condition: time
                      after: '06:00:00'
                      before: '20:00:00'
                  sequence:
                    - service: script.turn_on
                      data:
                        entity_id: script.undercabinet_morning
              default:
                - service: script.turn_on
                  data:
                    entity_id: script.undercabinet_evening
      # ELSE turn on bright scene
      default:
        - service: script.turn_on
          data:
            entity_id: script.undercabinet_cool

lr_tv_mute:
  sequence:
    - service: rest_command.lr_tv_mute
lr_tv_on:
  sequence:
    - service: rest_command.lr_tv_on
lr_tv_off:
  sequence:
    - service: rest_command.lr_tv_offf
lr_tv_channelup:
  sequence:
    - service: rest_command.lr_tv_channelup
lr_tv_channeldown:
  sequence:
    - service: rest_command.lr_tv_channeldown
lr_tv_last:
  sequence:
    - service: rest_command.lr_tv_last
lr_tv_home:
  sequence:
    - service: rest_command.lr_tv_home
lr_tv_netflix:
  sequence:
    - service: rest_command.lr_tv_netflix
lr_tv_info:
  sequence:
    - service: rest_command.lr_tv_info
lr_tv_cablebox:
  sequence:
    - service: rest_command.lr_tv_cablebox
lr_tv_louder:
  sequence:
    - service: rest_command.lr_tv_louder
lr_tv_muchlouder:
  sequence:
    - service: rest_command.lr_tv_muchlouder
lr_tv_softer:
  sequence:
    - service: rest_command.lr_tv_softer
lr_tv_muchsofter:
  sequence:
    - service: rest_command.lr_tv_muchsofter
lr_tv_nbc:
  sequence:
    - service: rest_command.lr_tv_nbc
lr_tv_cbs:
  sequence:
    - service: rest_command.lr_tv_cbs
lr_tv_science:
  sequence:
    - service: rest_command.lr_tv_science
lr_tv_cnn:
  sequence:
    - service: rest_command.lr_tv_cnn
lr_tv_tcm:
  sequence:
    - service: rest_command.lr_tv_tcm

# office_ac_reset:
#   sequence:
#     - service: input_boolean.turn_off
#       entity_id: input_boolean.office_ac_power
#     - service: input_boolean.turn_on
#       entity_id: input_boolean.office_ac_eco
#     - service: input_boolean.turn_on
#       entity_id: input_boolean.office_ac_display
#     - service: input_number.set_value
#       entity_id: input_number.office_ac_temperature
#       value: 70
#     - service: input_select.set_value
#       entity_id: input_number.office_ac_fan
#       value: "low"
#     - service: input_select.set_value
#       entity_id: input_number.office_ac_mode
#       value: "cool"

mb_ac_to_night_setting:
  alias: Set MB AC to Night Setting
  sequence:
    - service: climate.turn_on
      data:
        entity_id: climate.master_bedroom_ac
    - service: climate.set_temperature
      data:
        entity_id: climate.master_bedroom_ac
        temperature: 64.0
        hvac_mode: cool
    - service: climate.set_fan_mode
      data:
        entity_id: climate.master_bedroom_ac
        fan_mode: high
    - service: climate.set_swing_mode
      data:
        entity_id: climate.master_bedroom_ac
        swing_mode: vertical

mb_ac_to_day_setting:
  alias: MB AC to Day Setting
  sequence:
    - service: climate.turn_on
      data:
        entity_id: climate.master_bedroom_ac
    - service: climate.set_temperature
      data:
        entity_id: climate.master_bedroom_ac
        temperature: 74.0
        hvac_mode: cool
    - service: climate.set_fan_mode
      data:
        entity_id: climate.master_bedroom_ac
        fan_mode: auto
    - service: climate.set_swing_mode
      data:
        entity_id: climate.master_bedroom_ac
        swing_mode: "off"

office_ac_toggle:
  alias: Office AC Toggle On/Off
  sequence:
    - service: switch.turn_on
      data:
        entity_id: switch.office_ac_power

office_zoom:
  alias: Office Zoom
  sequence:
## Setup the lights just right
    - service: scene.turn_on
      data:
        entity_id: scene.office_zoom
## Pause the music
    - service: media_player.media_pause
      data:
        entity_id: media_player.office_home
##  Here is where we could close the blinds
##
##  Run the scene again in case the back lights came on with the door light switch
    - delay: "00:00:02"
    - service: scene.turn_on
      data:
        entity_id: scene.office_zoom
